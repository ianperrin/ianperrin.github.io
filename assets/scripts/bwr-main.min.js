const mapMarkers={drink:getMarker("fa-coffee","red","circle","fas"),wrench:getMarker("fa-wrench","orange","circle","fas"),food:getMarker("fa-utensils","green","circle","fas"),view:getMarker("fa-camera","indigo","circle","fas"),bed:getMarker("fa-bed","blue","circle","fas")},maps=[],placeLayers=[],mapDivs=document.querySelectorAll("div.map");let observer;const mnsrySelector="div.row-bwr-trip-places",bwrPlacesDivs=document.querySelectorAll(mnsrySelector),msnry=[],flkty=[];function onIntersection(e){e.forEach((e=>{e.intersectionRatio>0&&(initMap(e.target),observer.unobserve(e.target))}))}function initMasonry(){this.elements.forEach(((e,t)=>{msnry[t]=new Masonry(e,{percentPosition:!0})}))}function destroyMasonry(){msnry.forEach(((e,t)=>{e.destroy()}))}function initFlickty(){this.elements.forEach(((e,t)=>{flkty[t]=new Flickity(e,{cellAlign:"center",contain:!0,percentPosition:!0,wrapAround:!0})}))}function destroyFlickity(){flkty.forEach(((e,t)=>{e.destroy()}))}function initMap(e){const t=e.id.split("-")[1],r={MapBox:L.tileLayer("https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}",{attribution:'&copy; <a href="https://www.mapbox.com/about/maps/" target="_blank" rel="noopener">Mapbox</a>, &copy; <a href="https://www.openstreetmap.org/copyright" target="_blank" rel="noopener">OpenStreetMap</a>',maxZoom:18,id:"mapbox/streets-v11",tileSize:512,zoomOffset:-1,accessToken:"pk.eyJ1IjoiaWFucGVycmluIiwiYSI6ImNrcmY1NXM2ZDA0ZXUyeGt3b29iZm56NTkifQ.ZzoGHO0lnc5aX4FK5xvO8Q"})};maps[t]=L.map(e.id,{scrollWheelZoom:!1,tap:!1}).addLayer(r.MapBox),maps[t].attributionControl.setPrefix();const o=`/assets/data/bwr-trip-${t}.json`,a={style:getStyle},n=new L.geoJSON.ajax(o,a);n.on("data:loaded",(function(){maps[t].fitBounds(n.getBounds().pad(.1)).setMaxBounds(n.getBounds().pad(.1)).setMinZoom(maps[t].getZoom())})).addTo(maps[t]);const s=document.querySelectorAll(`div#bwr-trip-${t} div.card[data-latlng]`);if(s.forEach(((e,t)=>{})),s){placeLayers[t]=L.featureGroup().addTo(maps[t]);for(let e=0;e<s.length;e++){const r=s[e].dataset;L.marker(JSON.parse(r.latlng),{icon:mapMarkers[r.type]}).bindPopup(getPopupText(r.name,r.location)).addTo(placeLayers[t])}}}function getStyle(e){return{color:e.properties.stroke}}function getPopupText(e,t){return`<strong>${e}</strong><br /><em>${t}</em><br />`}function getMarker(e="",t="blue",r="circle",o="glyphicon"){return L.ExtraMarkers.icon({icon:e,markerColor:t,shape:r,prefix:o})}ssm.addState({id:"medium",query:"(max-width: 991.98px)",onEnter:function(){destroyMasonry(),imagesLoaded(bwrPlacesDivs,initFlickty)}}),ssm.addState({id:"large",query:"(min-width: 992px)",onEnter:function(){imagesLoaded(bwrPlacesDivs,initMasonry),destroyFlickity()}}),"IntersectionObserver"in window?(observer=new IntersectionObserver(onIntersection,{rootMargin:"250px"}),mapDivs.forEach((e=>{"object"!=typeof e||!("classList"in e)||e.classList.contains("lazy-loaded")||e.classList.contains("lazy-error")||observer.observe(e)}))):mapDivs.forEach(initMap);